enum Difficulty {
  EASY
  MEDIUM
  HARD
}

model Quiz {
  id     String @id @default(uuid())
  title  String
  userId String

  questions Question[]
  responses QuizResponse[]
  createdBy User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  startAt   DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Question {
  id     String @id @default(uuid())
  title  String
  quizId String

  difficulty Difficulty @default(MEDIUM)

  quiz      Quiz               @relation(fields: [quizId], references: [id], onDelete: Cascade)
  options   QuestionOption[]
  responses QuestionResponse[]
}

model QuestionOption {
  id         String @id @default(uuid())
  title      String
  questionId String

  correct Boolean @default(false)

  question  Question           @relation(fields: [questionId], references: [id], onDelete: Cascade)
  responses QuestionResponse[]
}

model QuizResponse {
  id     String @id @default(uuid())
  userId String @unique

  quiz      Quiz               @relation(fields: [quizId], references: [id])
  user      User               @relation(fields: [userId], references: [id])
  responses QuestionResponse[]
  quizId    String @unique
}

model QuestionResponse {
  id               String @id @default(uuid())
  quizResponseId   String
  questionId       String
  selectedOptionId String

  quizResponse   QuizResponse   @relation(fields: [quizResponseId], references: [id])
  question       Question       @relation(fields: [questionId], references: [id])
  selectedOption QuestionOption @relation(fields: [selectedOptionId], references: [id])
}
